groups:
- name: infra
  jobs: 
  - build-docker-fission-cli
  - build-docker-newman
- name: envs
  jobs:
  - update-python-env
  - update-go-env
  - build-fission-go-builder-image
  - update-nodejs-env
  - update-binary-env
- name: all-functions
  jobs:
  - fission-python-echo
  - fission-nodejs-form-to-json
  - fission-python-echo-read-secret
  - fission-go-hello
  - fission-go-register-ticket
- name: python
  jobs: 
  # - fission-python-echo
  - fission-python-echo-read-secret
  - fission-python-echo-stage
- name: nodejs
  jobs: 
  - fission-nodejs-form-to-json
- name: go
  jobs: 
  - build-fission-go-builder-image
  - fission-go-hello
  - fission-go-register-ticket

resource_types:
# https://github.com/cloudfoundry-community/slack-notification-resource
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: pull-request-test
  type: docker-image
  source:
    repository: jtarchie/pr
    tag: test

resources:
# - name: oic-src
#   type: git
#   source:
#     uri: https://github.com/OpenIndustryCloud/OIC-Platform.git
#     branch: master
#     disable_ci_skip: true
# Code for all Docker Images
- name: docker-images-src
  type: git
  source:
    uri: https://github.com/OpenIndustryCloud/docker-images.git
    branch: master
    disable_ci_skip: true
# Code for all Fission Functions
- name: fission-functions-src
  type: git
  source:
    uri: https://github.com/OpenIndustryCloud/fission-functions.git
    branch: master
    disable_ci_skip: true
# Code for CI unitasks 
- name: oic-ci-tasks-src
  type: git
  source:
    uri: https://github.com/OpenIndustryCloud/oic-ci-tasks
    branch: master
    disable_ci_skip: true
# Slack Definitions
- name: slack-alert-infra
  type: slack-notification
  source:
    url: ((slack-url-infra))
- name: slack-alert-buildbot
  type: slack-notification
  source:
    url: ((slack-url-buildbot))
# Docker Images
- name: docker-image-fission-cli
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-fission-cli))
- name: docker-image-newman
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-newman))
- name: docker-image-python-env
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-python-env))
    tag: latest
- name: docker-image-go-env
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-go-env))
    tag: latest
- name: docker-image-go-builder
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-go-builder))
    tag: latest
- name: docker-image-nodejs-env
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-nodejs-env))
    tag: latest
- name: docker-image-binary-env
  type: docker-image
  source:
    email: ((docker-gcr-email))
    username: ((docker-gcr-username))
    password: ((docker-gcr-password))
    repository: ((docker-gcr-root))/((docker-image-binary-env))
    tag: latest
# Pull Requests
- name: fission-functions-pr
  type: pull-request
  source:
    access_token: ((gh-access-token))
    private_key: ((gh-ssh-key))
    repo: OpenIndustryCloud/fission-functions
    base: master
- name: fission-functions-merge-pr
  type: pull-request-test
  source:
    access_token: ((gh-access-token))
    private_key: ((gh-ssh-key))
    base: test-merge
    repo: OpenIndustryCloud/fission-functions


jobs:
#####################################################################
#
# Docker Images for Environments
#
#####################################################################
# Update Python Images
- name: update-python-env
  public: true
  plan:
  - get: docker-images-src
    trigger: true
  - get: oic-ci-tasks-src
  - get: docker-image-fission-cli
  - task: lint-dockerfiles
    file: oic-ci-tasks-src/docker/lint/lint_dockerfile.yaml
    params: 
      SEARCH_PATH: "docker-src/fission/environments/python3"
    input_mapping: 
      src: oic-ci-tasks-src
      docker-src: docker-images-src
  - put: docker-image-python-env
    params:
      build: docker-images-src/fission/environments/python3
  - task: update-env
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/env/update/update_env.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
    params: 
      FUNCTION_ENVIRONMENT: python
      FUNCTION_IMAGE: ((docker-gcr-root))/((docker-image-python-env)):latest
      # BUILDER_IMAGE: fission/go-env:builder
      FISSION_ROUTER: ((fission-router))
      FISSION_URL: ((fission-url))
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We updated a fission environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          Sorry, we failed to update the environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
# Update Go images
- name: update-go-env
  public: true
  plan:
  - get: docker-images-src
    trigger: true
  - get: oic-ci-tasks-src
  - get: docker-image-fission-cli
  - task: lint-dockerfiles
    file: oic-ci-tasks-src/docker/lint/lint_dockerfile.yaml
    params: 
      SEARCH_PATH: "docker-src/fission/environments/go"    
    input_mapping: 
      src: oic-ci-tasks-src
      docker-src: docker-images-src
  - put: docker-image-go-env
    params:
      build: docker-images-src/fission/environments/go
  - task: update-env
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/env/update/update_env.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
    params: 
      FUNCTION_ENVIRONMENT: go
      FUNCTION_IMAGE: ((docker-gcr-root))/((docker-image-go-env)):latest
      # BUILDER_IMAGE: fission/go-env:builder
      FISSION_ROUTER: ((fission-router))
      FISSION_URL: ((fission-url))
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We updated a fission environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          Sorry, we failed to update the environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
- name: build-fission-go-builder-image
  public: true
  plan:
  - get: docker-images-src
    trigger: true
  - get: oic-ci-tasks-src
  - task: lint-dockerfiles
    file: oic-ci-tasks-src/docker/lint/lint_dockerfile.yaml
    params: 
      SEARCH_PATH: "docker-src/fission/environments/go/builder"    
    input_mapping: 
      src: oic-ci-tasks-src
      docker-src: docker-images-src
  - put: docker-image-go-builder
    params:
      build: docker-images-src/fission/environments/go/builder
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We tested, built and published a new Docker image for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          Sorry, we failed to publish a new Docker image for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

# Update nodejs images
- name: update-nodejs-env
  public: true
  plan:
  - get: docker-images-src
    trigger: true
  - get: oic-ci-tasks-src
  - get: docker-image-fission-cli
  - task: lint-dockerfiles
    file: oic-ci-tasks-src/docker/lint/lint_dockerfile.yaml
    params: 
      SEARCH_PATH: "docker-src/fission/environments/nodejs"    
    input_mapping: 
      src: oic-ci-tasks-src
      docker-src: docker-images-src
  - put: docker-image-nodejs-env
    params:
      build: docker-images-src/fission/environments/nodejs
  - task: update-env
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/env/update/update_env.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
    params: 
      FUNCTION_ENVIRONMENT: nodejs
      FUNCTION_IMAGE: ((docker-gcr-root))/((docker-image-nodejs-env)):latest
      # BUILDER_IMAGE: fission/go-env:builder
      FISSION_ROUTER: ((fission-router))
      FISSION_URL: ((fission-url))
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We updated a fission environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          Sorry, we failed to update the environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

# Update Binary Image
- name: update-binary-env
  public: true
  plan:
  - get: docker-images-src
    trigger: true
  - get: oic-ci-tasks-src
  - get: docker-image-fission-cli
  - task: lint-dockerfiles
    file: oic-ci-tasks-src/docker/lint/lint_dockerfile.yaml
    params: 
      SEARCH_PATH: "docker-src/fission/environments/binary"    
    input_mapping: 
      src: oic-ci-tasks-src
      docker-src: docker-images-src
  - put: docker-image-binary-env
    params:
      build: docker-images-src/fission/environments/binary
  - task: update-env
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/env/update/update_env.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
    params: 
      FUNCTION_ENVIRONMENT: binary
      FUNCTION_IMAGE: ((docker-gcr-root))/((docker-image-binary-env)):latest
      # BUILDER_IMAGE: fission/go-env:builder
      FISSION_ROUTER: ((fission-router))
      FISSION_URL: ((fission-url))
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We updated a fission environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          Sorry, we failed to update the environment. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

#####################################################################
#
# Docker Images for Infrastructure
#
#####################################################################
# Fission CLI
- name: build-docker-fission-cli
  public: true
  plan:
  - get: docker-images-src
    trigger: true
  - get: oic-ci-tasks-src
  - task: lint-dockerfiles
    file: oic-ci-tasks-src/docker/lint/lint_dockerfile.yaml
    params: 
      SEARCH_PATH: "docker-src/fission/cli"
    input_mapping: 
      src: oic-ci-tasks-src
      docker-src: docker-images-src
  - put: docker-image-fission-cli
    params:
      build: docker-images-src/fission/cli
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We tested, built and published a new Docker image for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          Sorry, we failed to publish a new Docker image for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

# Newman (Postman CLI)
- name: build-docker-newman
  public: true
  plan:
  - get: docker-images-src
    trigger: true
  - get: oic-ci-tasks-src
  - task: lint-dockerfiles
    file: oic-ci-tasks-src/docker/lint/lint_dockerfile.yaml
    params: 
      SEARCH_PATH: "docker-src/newman"
    input_mapping: 
      src: oic-ci-tasks-src
      docker-src: docker-images-src
  - put: docker-image-newman
    params:
      build: docker-images-src/newman
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We tested, built and published a new Docker image for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          Sorry, we failed to publish a new Docker image for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

#####################################################################
#
# Fission functions tested after the images are published
#
#####################################################################
# Python Functions
# - name: fission-python-echo
#   public: true
#   plan:
#   - aggregate:   
#     - get: docker-image-fission-cli
#       passed: [ build-docker-fission-cli ]
#     - get: docker-image-newman
#       passed: [ build-docker-newman ]
#   - get: fission-functions-src
#     trigger: true
#   - get: oic-ci-tasks-src
#   - task: lint-python
#     file: oic-ci-tasks-src/python/lint/lint_python.yaml
#     input_mapping: 
#       src: oic-ci-tasks-src
#       code-src: fission-functions-src
#     params:
#       SEARCH_PATH: "code-src/echo_read_secret"
#   - task: publish-function-to-staging
#     image: docker-image-fission-cli
#     file: oic-ci-tasks-src/function/publish/publish_function.yaml
#     params: 
#       ENVIRONMENT: staging
#       FISSION_URL: ((fission-url))
#       FISSION_ROUTER: ((fission-router))
#       FUNCTION_NAME: echo
#       FUNCTION_ENVIRONMENT: python
#       CODE_PATH: function-src/echo/echo.py
#       FUNCTION_METHOD: POST
#     input_mapping: 
#       task-src: oic-ci-tasks-src
#       function-src: fission-functions-src
#   - task: newman-test-function-in-staging
#     attempts: 10
#     image: docker-image-newman
#     file: oic-ci-tasks-src/function/test/test_function.yaml
#     input_mapping: 
#       task-src: oic-ci-tasks-src
#       function-src: fission-functions-src
#     params:
#       FISSION_ROUTER: ((fission-router))
#       ENVIRONMENT: staging
#       COLLECTION: function-src/echo/ci/collection.json
#       FUNCTION_NAME: echo
#       PROTOCOL: http
#       TARGET_PORT: 80
#       FUNCTION_METHOD: POST
#   - task: remove-function-from-staging
#     image: docker-image-fission-cli
#     file: oic-ci-tasks-src/function/remove/remove_function.yaml
#     params: 
#       ENVIRONMENT: staging
#       FISSION_URL: ((fission-url))
#       FISSION_ROUTER: ((fission-router))
#       FUNCTION_NAME: echo
#       FUNCTION_ENVIRONMENT: python
#       FUNCTION_METHOD: POST
#     input_mapping: 
#       task-src: oic-ci-tasks-src
#       function-src: fission-functions-src
#     on_success: 
#       put: slack-alert-buildbot
#       params:
#         text: |
#           We successfully tested a function for the infrastructure. See at: 
#           https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
#           or at:
#           https://concourse.((domain))/builds/$BUILD_ID
#     on_failure: 
#       put: slack-alert-infra
#       params:
#         text: |
#           WARNING Tests do not pass on a function. See at: 
#           https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
#           or at:
#           https://concourse.((domain))/builds/$BUILD_ID
- name: fission-python-echo-read-secret
  public: true
  plan:
  - aggregate:   
    - get: docker-image-fission-cli
      passed: [ build-docker-fission-cli ]
    - get: docker-image-newman
      passed: [ build-docker-newman ]
  - get: fission-functions-src
    trigger: true
  - get: oic-ci-tasks-src
  # - task: lint-python
  #   file: oic-ci-tasks-src/python/lint/lint_python.yaml
  #   input_mapping: 
  #     src: oic-ci-tasks-src
  #     code-src: fission-functions-src
  #   params:
  #     SEARCH_PATH: "code-src/echo_read_secret"
  - task: publish-function-to-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/publish/publish_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: echo-read-secret
      FUNCTION_ENVIRONMENT: python
      CODE_PATH: function-src/echo_read_secret/echo_read_secret.py
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
  - task: newman-test-function-in-staging
    attempts: 10
    image: docker-image-newman
    file: oic-ci-tasks-src/function/test/test_function.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    params:
      FISSION_ROUTER: ((fission-router))
      ENVIRONMENT: staging
      FISSION_ROUTER: ((fission-router))
      COLLECTION: function-src/echo_read_secret/ci/collection.json
      FUNCTION_NAME: echo-read-secret
      PROTOCOL: http
      TARGET_PORT: 80
      FUNCTION_METHOD: POST
  - task: remove-function-from-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/remove/remove_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: echo-read-secret
      FUNCTION_ENVIRONMENT: python
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We successfully tested a function for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          WARNING Tests do not pass on a function. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

# Nodejs Functions
- name: fission-nodejs-form-to-json
  public: true
  serial: true
  plan:
  - aggregate:   
    - get: docker-image-fission-cli
      passed: [ build-docker-fission-cli ]
    - get: docker-image-newman
      passed: [ build-docker-newman ]
  - get: fission-functions-src
    trigger: true
  - get: oic-ci-tasks-src
  # - task: lint-nodejs
  #   file: oic-ci-tasks-src/nodejs/lint/lint_nodejs.yaml
  #   input_mapping: 
  #     src: oic-ci-tasks-src
  #     code-src: fission-functions-src
  #   params:
  #     SEARCH_PATH: "code-src/echo_read_secret"
  - task: publish-function-to-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/publish/publish_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: form-to-json
      FUNCTION_ENVIRONMENT: nodejs
      CODE_PATH: function-src/form_to_json/form_to_json.js
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
  - task: newman-test-function-in-staging
    attempts: 10
    image: docker-image-newman
    file: oic-ci-tasks-src/function/test/test_function.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    params:
      FISSION_ROUTER: ((fission-router))
      ENVIRONMENT: staging
      COLLECTION: function-src/form_to_json/ci/collection.json
      FUNCTION_NAME: form-to-json
      PROTOCOL: http
      TARGET_PORT: 80
      FUNCTION_METHOD: POST
  - task: remove-function-from-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/remove/remove_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: form-to-json
      FUNCTION_ENVIRONMENT: nodejs
      FUNCTION_METHOD: GET
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We successfully tested a function for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          WARNING Tests do not pass on a function. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

# Go Functions
- name: fission-go-hello
  public: true
  serial: true
  plan:
  - aggregate:   
    - get: docker-image-fission-cli
      passed: [ build-docker-fission-cli ]
    - get: docker-image-newman
      passed: [ build-docker-newman ]
    - get: docker-image-go-builder
      passed: [ build-fission-go-builder-image ]
  - get: fission-functions-src
    trigger: true
  - get: oic-ci-tasks-src
  - task: build-go-function
    image: docker-image-go-builder
    file: oic-ci-tasks-src/function/build/build_function.yaml
    params:
      FUNCTION_NAME: hello
      FUNCTION_ENVIRONMENT: go
      CODE_PATH: function-src/hello/hello.go
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
  - task: publish-function-to-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/publish/publish_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: hello
      FUNCTION_ENVIRONMENT: go
      CODE_PATH: function-src/hello.so
      FUNCTION_METHOD: GET
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: built-artifacts
  - task: newman-test-function-in-staging
    attempts: 10
    image: docker-image-newman
    file: oic-ci-tasks-src/function/test/test_function.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    params:
      FISSION_ROUTER: ((fission-router))
      ENVIRONMENT: staging
      COLLECTION: function-src/hello/ci/collection.json
      FUNCTION_NAME: hello
      PROTOCOL: http
      TARGET_PORT: 80
      FUNCTION_METHOD: GET
  - task: remove-function-from-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/remove/remove_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: hello
      FUNCTION_ENVIRONMENT: go
      FUNCTION_METHOD: GET
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We successfully tested a function for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          WARNING Tests do not pass on a function. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
- name: fission-go-register-ticket
  public: true
  serial: true
  plan:
  - aggregate:   
    - get: docker-image-fission-cli
      passed: [ build-docker-fission-cli ]
    - get: docker-image-newman
      passed: [ build-docker-newman ]
    - get: docker-image-go-builder
      passed: [ build-fission-go-builder-image ]
  - get: fission-functions-src
    trigger: true
  - get: oic-ci-tasks-src
  - task: build-go-function
    image: docker-image-go-builder
    file: oic-ci-tasks-src/function/build/build_function.yaml
    params:
      FUNCTION_NAME: register-ticket
      FUNCTION_ENVIRONMENT: go
      CODE_PATH: function-src/register-ticket/register-ticket.go
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
  - task: publish-function-to-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/publish/publish_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: register-ticket
      FUNCTION_ENVIRONMENT: go
      CODE_PATH: function-src/register-ticket.so
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: built-artifacts
  - task: newman-test-function-in-staging
    attempts: 10
    image: docker-image-newman
    file: oic-ci-tasks-src/function/test/test_function.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    params:
      FISSION_ROUTER: ((fission-router))
      ENVIRONMENT: staging
      COLLECTION: function-src/register-ticket/ci/collection.json
      FUNCTION_NAME: register-ticket
      PROTOCOL: http
      TARGET_PORT: 80
      FUNCTION_METHOD: POST
  - task: remove-function-from-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/remove/remove_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: register-ticket
      FUNCTION_ENVIRONMENT: go
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We successfully tested a function for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          WARNING Tests do not pass on a function. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

#####################################################################
#
# Test PR Management
#
#####################################################################

- name: fission-python-echo-stage
  public: true
  plan:
  - aggregate:
    - get: docker-image-fission-cli
      passed: [ build-docker-fission-cli ]
    - get: docker-image-newman
      passed: [ build-docker-newman ]
  - get: fission-functions-src
    trigger: true
  - get: oic-ci-tasks-src
  - task: lint-python
    file: oic-ci-tasks-src/python/lint/lint_python.yaml
    input_mapping: 
      src: oic-ci-tasks-src
      code-src: fission-functions-src
    params:
      SEARCH_PATH: "code-src/echo_read_secret"
  - task: publish-function-to-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/publish/publish_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: echo
      FUNCTION_ENVIRONMENT: python
      CODE_PATH: function-src/echo/echo.py
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
  - task: newman-test-function-in-staging
    attempts: 10
    image: docker-image-newman
    file: oic-ci-tasks-src/function/test/test_function.yaml
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    params:
      FISSION_ROUTER: ((fission-router))
      ENVIRONMENT: staging
      COLLECTION: function-src/echo/ci/collection.json
      FUNCTION_NAME: echo
      PROTOCOL: http
      TARGET_PORT: 80
      FUNCTION_METHOD: POST
  - task: remove-function-from-staging
    image: docker-image-fission-cli
    file: oic-ci-tasks-src/function/remove/remove_function.yaml
    params: 
      ENVIRONMENT: staging
      FISSION_URL: ((fission-url))
      FISSION_ROUTER: ((fission-router))
      FUNCTION_NAME: echo
      FUNCTION_ENVIRONMENT: python
      FUNCTION_METHOD: POST
    input_mapping: 
      task-src: oic-ci-tasks-src
      function-src: fission-functions-src
    on_success: 
      put: slack-alert-buildbot
      params:
        text: |
          We successfully tested a function for the infrastructure. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID
    on_failure: 
      put: slack-alert-infra
      params:
        text: |
          WARNING Tests do not pass on a function. See at: 
          https://concourse.((domain))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
          or at:
          https://concourse.((domain))/builds/$BUILD_ID

- name: fission-python-echo-create-pr
  public: true
  plan:
  - aggregate:
    - get: fission-functions-src
      trigger: true
      passed: [ "fission-python-echo-stage" ]
  - get: oic-ci-tasks-src
  - task: create-pr
    file: oic-ci-tasks-src/git/create-pr/create-pr.yaml
    input_mapping: 
      code-src: fission-functions-src
    params:
      GITHUB_ACCESS_TOKEN: ((gh-access-token))
      REPO_NAME: OpenIndustryCloud/fission-functions
      BASE_BRANCH: test-merge


- name: fission-functions-echo-merge-pr
  plan:
  - get: fission-functions-src
    passed: [ 'fission-python-echo-create-pr' ]
  - get: fission-functions-merge-pr
    trigger: true
  - put: fission-functions-merge-pr
    params:
      path: fission-functions-merge-pr
      status: success
      merge:
        method: merge
        commit_msg: fission-functions-merge-pr/README.md

- name: fission-functions-echo-test-pr
  plan:
  - get: fission-functions-merge-pr
    trigger: true
    version: every
  - get: oic-ci-tasks-src
  - task: lint-python
    file: oic-ci-tasks-src/python/lint/lint_python.yaml
    input_mapping: 
      src: oic-ci-tasks-src
      code-src: fission-functions-merge-pr
    params:
      SEARCH_PATH: "fission-functions-merge-pr/echo_read_secret"
    on_success:
      put: fission-functions-merge-pr
      params:
        path: fission-functions-merge-pr
        status: success
    on_failure:
      put: fission-functions-merge-pr
      params:
        path: fission-functions-merge-pr
        status: failure

- name: fission-functions-echo-release
  plan:
  - get: fission-functions-src
    passed: [ 'test-pr-merge' ]
  - task: next-tag
    config:
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      platform: linux
      inputs:
      - name: fission-functions-src
      outputs:
      - name: tag
      run:
        path: bash
        args:
          - -c
          - |
            set -eux
            echo v > tag/prefix
            pushd git-pr
              git tag -l | sed -e "s/v//" | sort -n | tail -n 1 | xargs -n 1 expr 1 + > ../tag/name
            popd
  - put: fission-functions-src
    params:
      repository: git-pr
      only_tag: true
      tag: tag/name
      tag_prefix: v
